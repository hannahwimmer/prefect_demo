# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: prefect_demo
prefect-version: 3.4.11

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
  - prefect.deployments.steps.git_clone:
      id: clone-step
      repository: https://github.com/hannahwimmer/prefect_demo.git
      branch: main
      credentials: "{{ prefect.blocks.github-credentials.prefect-demo }}"

  - prefect.deployments.steps.run_shell_script:
      id: install-uv
      directory: "{{ clone-step.directory }}"
      script: |
        curl -LsSf https://astral.sh/uv/install.sh | sh

  - prefect.deployments.steps.run_shell_script:
      directory: "{{ clone-step.directory }}"
      script: |
        echo "Installing with uv..."
        uv sync --no-editable --no-dev --project pyproject.toml

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: "test-deployment"
  description: "short test deployment using prefect"
  schedule: 
    interval: 20
  flow_name: greeting-procedure
  entrypoint: prefect_demo_script.py:greeting_procedure
  work_pool:
    name: demo-pool
    work_queue_name: "default"
    job_variables: {
        "env": {"UV_PROJECT_ENVIRONMENT": "/usr/local"}
    }
